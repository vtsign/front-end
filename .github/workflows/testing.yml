name: Testing

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/front-end:testing
  PROJECT_PATH: /opt/vtsign-testing/front-end

jobs:
  # test:
  #   name: 'Run Test'
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Use Node.js version 12
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: '12'
  #   - name: npm install and test
  #     run: |
  #       npm install
  #       npm test
  
  build:
    name: 'Build docker image'
    # needs: [test]
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Repo 
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ env.IMAGE_NAME }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
  
  deploy:
    name: 'Update testing server'
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    - name: SSH and deploy in server
      uses: appleboy/ssh-action@master
      with:
        HOST: ${{ secrets.SSH_HOST }}
        USERNAME: ${{ secrets.SSH_USERNAME }}
        KEY: ${{ secrets.SSH_KEY }}
        PORT: ${{ secrets.SSH_PORT }}
        script: |
          cd ${{ env.PROJECT_PATH }}
          docker tag ${{ env.IMAGE_NAME }} ${{ env.IMAGE_NAME }}-temp
          docker rmi ${{ env.IMAGE_NAME }}
          docker pull ${{ env.IMAGE_NAME }}
          docker rmi ${{ env.IMAGE_NAME }}-temp
          echo IMAGE=${{ env.IMAGE_NAME }} > .env
          docker-compose up -d